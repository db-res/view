import{_ as b,o as r,c as d,a,F as k,r as f,b as _,n as m,t as h}from"./index.js";const C={data(){return{deck:[],selectedCards:[],bestCombination:[],loading:!1}},created(){const e=this.generateDeck();this.deck=e;let t=[];t=[{checked:!0,suit:"\u2660",point:2},{checked:!0,suit:"\u2665",point:12},{checked:!0,suit:"\u2666",point:7},{checked:!0,suit:"\u2663",point:8},{checked:!0,suit:"\u2663",point:9},{checked:!0,suit:"\u2660",point:11},{checked:!0,suit:"\u2660",point:3},{checked:!0,suit:"\u2666",point:10},{checked:!0,suit:"\u2665",point:2},{checked:!0,suit:"\u2663",point:10},{checked:!0,suit:"\u2665",point:11},{checked:!0,suit:"\u2663",point:11},{checked:!0,suit:"\u2660",point:5},{checked:!0,suit:"\u2665",point:3},{checked:!0,suit:"\u2660",point:13},{checked:!0,suit:"\u2663",point:1},{checked:!0,suit:"\u2660",point:9},{checked:!0,suit:"\u2663",point:1},{checked:!0,suit:"\u2663",point:13},{checked:!0,suit:"\u2663",point:12}],this.deck.map(s=>{t.filter(c=>c.suit===s.suit&&c.point===s.point).length>0&&(s.checked=!0)}),this.selectedCards=this.deck.filter(s=>s.checked),console.log(t)},methods:{getBestCombination(){this.loading=!0;const e=this.findBestCombinations(this.selectedCards);if(e){console.log(e);for(const t of e)console.log(`${t.point}${t.suit}`);this.bestCombination=e}},shuffleArray(e){for(let t=e.length-1;t>0;t--){const s=Math.floor(Math.random()*(t+1));[e[t],e[s]]=[e[s],e[t]]}return e},getPoint(e){this.deck.map(t=>{t.point===e.point&&t.suit===e.suit&&(t.checked=!0,this.selectedCards.includes(t)&&(t.checked=!1))}),this.selectedCards=this.deck.filter(t=>t.checked)},strPoint(e){let t=e;switch(e){case 1:t="A";break;case 11:t="J";break;case 12:t="Q";break;case 13:t="K";break;default:t=e;break}return t},generateDeck(){const e=["\u2660","\u2665","\u2666","\u2663"],t=[1,2,3,4,5,6,7,8,9,10,11,12,13],s=[];for(const c of e)for(const n of t)s.push({suit:c,point:n});return s},getCombinations(e,t){const s=[];function c(n,o){if(o>=e.length){n.length>0&&s.push(n);return}c(n,o+1),c([...n,e[o]],o+1)}return c([],0),s},calculatePoints(e){let t=0;for(const s of e)switch(s.point){case"A":t+=1;break;case"K":case"Q":case"J":t+=10;break;default:t+=parseInt(s.point)}return t},findBestCombinations(e){const t=this.getCombinations(e,3);console.log("\u6240\u6709\u7EC4\u5408",t.length);const s=t.filter(o=>{const i=o.sort((u,l)=>u.point-l.point),p=i.every((u,l)=>l===0||u.point===i[l-1].point+1),g=i.every(u=>u.suit===i[0].suit);return p&&g});let c=null,n=0;for(const o of s){const i=this.calculatePoints(o);i>n&&(c=o,n=i)}return this.loading=!1,c}}},x={class:"box"},y={style:{width:"60%",height:"80%"}},v={style:{display:"flex","flex-wrap":"wrap"}},B=["onClick"],P={style:{"margin-top":"20px"}},w={key:0},A={style:{display:"flex","flex-wrap":"wrap","margin-top":"20px"}};function F(e,t,s,c,n,o){return r(),d("div",x,[a("div",y,[a("div",v,[(r(!0),d(k,null,f(n.deck,i=>(r(),d("div",{onClick:p=>o.getPoint(i),style:m([{"margin-right":"10px","margin-bottom":"10px","flex-shrink":"0",border:"1px solid #666","background-color":"#eee",cursor:"pointer",padding:"2px 6px"},{background:i.checked?"#ffb5b5":" #eee"}]),key:i.point},h(i.suit)+" "+h(o.strPoint(i.point)),13,B))),128))]),a("div",P,[a("button",{class:"btn",onClick:t[0]||(t[0]=(...i)=>o.getBestCombination&&o.getBestCombination(...i))},"\u8F93\u51FA\u6700\u4F73\u7EC4\u5408"),n.loading?(r(),d("span",w,"\u7B5B\u9009\u4E2D...")):_("",!0)]),a("div",A,[(r(!0),d(k,null,f(n.bestCombination,i=>(r(),d("div",{style:{"margin-right":"10px","margin-bottom":"10px","flex-shrink":"0",border:"1px solid #666","background-color":"#eee",padding:"2px 6px"},key:i.point},h(i.suit)+" "+h(o.strPoint(i.point)),1))),128))])])])}const S=b(C,[["render",F]]);export{S as default};
